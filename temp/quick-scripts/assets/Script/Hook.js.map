{"version":3,"sources":["Hook.js"],"names":["cc","Class","extends","Component","properties","MAX_LENGTH","rotationAngle","rotationDirection","rotationSpeed","fireSpeed","pullSpeed","state","catch","onLoad","start","fire","update","dt","node","x","Math","cos","PI","y","sin","length","v2","mag","setPosition","rotation","onCollisionEnter","other","self"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,oBAAW,GAjBH;AAkBRC,uBAAe,CAlBP;AAmBRC,2BAAmB,CAnBX;AAoBRC,uBAAe,CApBP;AAqBRC,mBAAW,GArBH;AAsBRC,mBAAW,GAtBH;AAuBRC,eAAO,MAvBC;AAwBRC,eAAO;AAxBC,KAHP;;AA8BL;;AAEAC,UAhCK,oBAgCK,CAET,CAlCI;AAoCLC,SApCK,mBAoCI,CAER,CAtCI;AAwCLC,QAxCK,kBAwCG;AACJ,YAAG,KAAKJ,KAAL,IAAc,MAAjB,EAAyB;AACrB,iBAAKC,KAAL,GAAa,KAAb;AACA,iBAAKD,KAAL,GAAa,MAAb;AACH;AACJ,KA7CI;AA+CLK,UA/CK,kBA+CGC,EA/CH,EA+CO;AACR,YAAG,KAAKN,KAAL,IAAc,MAAjB,EAAyB;AACrB,iBAAKO,IAAL,CAAUC,CAAV,IAAeC,KAAKC,GAAL,CAAS,KAAKf,aAAL,GAAqBc,KAAKE,EAA1B,GAA+B,GAAxC,IAA+C,KAAKb,SAApD,GAAgEQ,EAA/E;AACA,iBAAKC,IAAL,CAAUK,CAAV,IAAeH,KAAKI,GAAL,CAAS,KAAKlB,aAAL,GAAqBc,KAAKE,EAA1B,GAA+B,GAAxC,IAA+C,KAAKb,SAApD,GAAgEQ,EAA/E;AACA,gBAAIQ,SAASzB,GAAG0B,EAAH,CAAM,KAAKR,IAAL,CAAUC,CAAhB,EAAmB,KAAKD,IAAL,CAAUK,CAA7B,EAAgCI,GAAhC,EAAb;AACA,gBAAGF,UAAU,KAAKpB,UAAlB,EAA8B;AAC1B,qBAAKM,KAAL,GAAa,MAAb;AACH;AACJ,SAPD,MAOO,IAAG,KAAKA,KAAL,IAAc,MAAjB,EAAyB;AAC5B,gBAAID,YAAY,KAAKA,SAArB;AACA,gBAAG,KAAKE,KAAR,EAAe;AACXF,6BAAa,CAAb;AACH;AACD,iBAAKQ,IAAL,CAAUC,CAAV,IAAeC,KAAKC,GAAL,CAAS,KAAKf,aAAL,GAAqBc,KAAKE,EAA1B,GAA+B,GAAxC,IAA+CZ,SAA/C,GAA2DO,EAA1E;AACA,iBAAKC,IAAL,CAAUK,CAAV,IAAeH,KAAKI,GAAL,CAAS,KAAKlB,aAAL,GAAqBc,KAAKE,EAA1B,GAA+B,GAAxC,IAA+CZ,SAA/C,GAA2DO,EAA1E;AACA,gBAAG,KAAKC,IAAL,CAAUK,CAAV,IAAe,CAAlB,EAAqB;AACjB,qBAAKL,IAAL,CAAUU,WAAV,CAAsB5B,GAAG0B,EAAH,CAAM,CAAN,EAAS,CAAT,CAAtB;AACA,qBAAKf,KAAL,GAAa,MAAb;AACH;AACJ,SAXM,MAWA,IAAG,KAAKA,KAAL,IAAc,MAAjB,EAAyB;AAC5B,gBAAG,KAAKL,aAAL,IAAsB,GAAzB,EAA8B;AAC1B,qBAAKC,iBAAL,GAAyB,CAAC,CAA1B;AACH;AACD,gBAAG,KAAKD,aAAL,IAAsB,CAAzB,EAA4B;AACxB,qBAAKC,iBAAL,GAAyB,CAAzB;AACH;AACD,iBAAKD,aAAL,IAAsB,KAAKC,iBAAL,GAAyB,KAAKC,aAA9B,GAA8CS,EAApE;AACA,iBAAKC,IAAL,CAAUW,QAAV,GAAqB,KAAKvB,aAA1B;AACH;AACJ,KA5EI;;;AA8ELwB,sBAAkB,0BAAUC,KAAV,EAAiBC,IAAjB,EAAuB,CAExC;AAhFI,CAAT","file":"Hook.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n\r\n        MAX_LENGTH:800,\r\n        rotationAngle: 0,\r\n        rotationDirection: 1,\r\n        rotationSpeed: 1,\r\n        fireSpeed: 100,\r\n        pullSpeed: 100,\r\n        state: \"IDLE\",\r\n        catch: false,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    fire () {\r\n        if(this.state == \"IDLE\") {\r\n            this.catch = false;\r\n            this.state = \"FIRE\";\r\n        }\r\n    },\r\n\r\n    update (dt) {\r\n        if(this.state == \"FIRE\") {\r\n            this.node.x += Math.cos(this.rotationAngle * Math.PI / 180) * this.fireSpeed * dt;\r\n            this.node.y -= Math.sin(this.rotationAngle * Math.PI / 180) * this.fireSpeed * dt;\r\n            var length = cc.v2(this.node.x, this.node.y).mag();\r\n            if(length >= this.MAX_LENGTH) {\r\n                this.state = \"PULL\";\r\n            }\r\n        } else if(this.state == \"PULL\") {\r\n            var pullSpeed = this.pullSpeed;\r\n            if(this.catch) {\r\n                pullSpeed /= 2;\r\n            }\r\n            this.node.x -= Math.cos(this.rotationAngle * Math.PI / 180) * pullSpeed * dt;\r\n            this.node.y += Math.sin(this.rotationAngle * Math.PI / 180) * pullSpeed * dt;\r\n            if(this.node.y >= 0) {\r\n                this.node.setPosition(cc.v2(0, 0));\r\n                this.state = \"IDLE\";\r\n            }\r\n        } else if(this.state == \"IDLE\") {\r\n            if(this.rotationAngle >= 180) {\r\n                this.rotationDirection = -1;\r\n            }\r\n            if(this.rotationAngle <= 0) {\r\n                this.rotationDirection = 1;\r\n            }\r\n            this.rotationAngle += this.rotationDirection * this.rotationSpeed * dt;\r\n            this.node.rotation = this.rotationAngle;\r\n        }\r\n    },\r\n\r\n    onCollisionEnter: function (other, self) {\r\n       \r\n    },\r\n});\r\n"]}