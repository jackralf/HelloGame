{"version":3,"sources":["..\\..\\..\\..\\assets\\Script/assets\\Script\\Hook.js"],"names":["cc","Class","extends","Component","properties","rotationAngle","rotationDirection","rotationSpeed","onFire","fireSpeed","onCatch","onLoad","start","fire","update","dt","node","x","Math","cos","PI","y","sin","abs","rotation","onCollisionEnter","other","self","console","log"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,uBAAe,CAjBP;AAkBRC,2BAAmB,CAlBX;AAmBRC,uBAAe,CAnBP;AAoBRC,gBAAQ,KApBA;AAqBRC,mBAAW,CArBH;AAsBRC,iBAAS;AAtBD,KAHP;;AA4BL;;AAEAC,UA9BK,oBA8BK,CAET,CAhCI;AAkCLC,SAlCK,mBAkCI,CAER,CApCI;AAsCLC,QAtCK,kBAsCG;AACJ,aAAKL,MAAL,GAAc,IAAd;AACH,KAxCI;AA0CLM,UA1CK,kBA0CGC,EA1CH,EA0CO;AACR,YAAG,KAAKL,OAAR,EAAiB;AACb,iBAAKM,IAAL,CAAUC,CAAV,IAAeC,KAAKC,GAAL,CAAS,KAAKd,aAAL,GAAqBa,KAAKE,EAA1B,GAA+B,GAAxC,IAA+C,KAAKX,SAAnE;AACA,iBAAKO,IAAL,CAAUK,CAAV,IAAeH,KAAKI,GAAL,CAAS,KAAKjB,aAAL,GAAqBa,KAAKE,EAA1B,GAA+B,GAAxC,IAA+C,KAAKX,SAAnE;AACA,gBAAGS,KAAKK,GAAL,CAAS,KAAKP,IAAL,CAAUK,CAAnB,IAAwB,GAA3B,EAAgC;AAC5B,qBAAKL,IAAL,CAAUC,CAAV,GAAc,CAAd;AACA,qBAAKD,IAAL,CAAUK,CAAV,GAAc,CAAd;AACA,qBAAKb,MAAL,GAAc,KAAd;AACA,qBAAKE,OAAL,GAAe,KAAf;AACH;AACJ,SATD,MASO,IAAG,KAAKF,MAAR,EAAgB;AACnB,iBAAKQ,IAAL,CAAUC,CAAV,IAAeC,KAAKC,GAAL,CAAS,KAAKd,aAAL,GAAqBa,KAAKE,EAA1B,GAA+B,GAAxC,IAA+C,KAAKX,SAAnE;AACA,iBAAKO,IAAL,CAAUK,CAAV,IAAeH,KAAKI,GAAL,CAAS,KAAKjB,aAAL,GAAqBa,KAAKE,EAA1B,GAA+B,GAAxC,IAA+C,KAAKX,SAAnE;AACH,SAHM,MAGA;AACH,gBAAG,KAAKJ,aAAL,IAAsB,GAAzB,EAA8B;AAC1B,qBAAKC,iBAAL,GAAyB,CAAC,CAA1B;AACH;AACD,gBAAG,KAAKD,aAAL,IAAsB,CAAzB,EAA4B;AACxB,qBAAKC,iBAAL,GAAyB,CAAzB;AACH;AACD,iBAAKD,aAAL,IAAsB,KAAKC,iBAAL,GAAyB,KAAKC,aAApD;AACA,iBAAKS,IAAL,CAAUQ,QAAV,GAAqB,KAAKnB,aAA1B;AACH;AACJ,KAjEI;;;AAmELoB,sBAAkB,0BAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACrCC,gBAAQC,GAAR,CAAY,qBAAZ;AACA,aAAKnB,OAAL,GAAe,IAAf;AACH;AAtEI,CAAT","file":"Hook.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n\r\n        rotationAngle: 0,\r\n        rotationDirection: 1,\r\n        rotationSpeed: 1,\r\n        onFire: false,\r\n        fireSpeed: 1,\r\n        onCatch: false,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    fire () {\r\n        this.onFire = true;\r\n    },\r\n\r\n    update (dt) {\r\n        if(this.onCatch) {\r\n            this.node.x -= Math.cos(this.rotationAngle * Math.PI / 180) * this.fireSpeed;\r\n            this.node.y += Math.sin(this.rotationAngle * Math.PI / 180) * this.fireSpeed;\r\n            if(Math.abs(this.node.y) < 0.5) {\r\n                this.node.x = 0;\r\n                this.node.y = 0;\r\n                this.onFire = false;\r\n                this.onCatch = false;\r\n            }\r\n        } else if(this.onFire) {\r\n            this.node.x += Math.cos(this.rotationAngle * Math.PI / 180) * this.fireSpeed;\r\n            this.node.y -= Math.sin(this.rotationAngle * Math.PI / 180) * this.fireSpeed;\r\n        } else {\r\n            if(this.rotationAngle >= 180) {\r\n                this.rotationDirection = -1;\r\n            }\r\n            if(this.rotationAngle <= 0) {\r\n                this.rotationDirection = 1;\r\n            }\r\n            this.rotationAngle += this.rotationDirection * this.rotationSpeed;\r\n            this.node.rotation = this.rotationAngle;\r\n        }\r\n    },\r\n\r\n    onCollisionEnter: function (other, self) {\r\n        console.log('on collision enter1');\r\n        this.onCatch = true;\r\n    },\r\n});\r\n"]}